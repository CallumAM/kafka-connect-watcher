---
# Configuration example

clusters:
  - hostname: localhost
    port: 8083
    interval: 5s
    metrics:
      prometheus:
        enabled: true
      aws_emf:
        namespace: KafkaConnect/Watcher
        dimensions:
          name: dev
        enabled: true
    evaluation_rules:
      - include_regex:
          - '(.*)$'
        exclude_regex:
          - '(.*)replicator(.*)'
        ignore_paused: true
        auto_correct_actions: []
#          - action: restart
#            wait_for_status: 10s
#            on_failure:
#              log_level: DEBUG
#          - action: restart
#          - action: pause
#            notify:
#              - target: sns.main_topic
#              - target: sns.alternate_topic
#              - target: http.slack_hook


  - hostname: localhost
    port: 8084
    interval: 5s
    metrics:
      prometheus:
        enabled: true
      aws_emf:
        namespace: KafkaConnect/Watcher
        dimensions:
          name: staging
        enabled: false
    evaluation_rules:
      - include_regex:
          - '(.*)$'
        exclude_regex:
          - '(.*)replicator(.*)'
        ignore_paused: true
        auto_correct_actions: []
#          - action: restart
#            wait_for_status: 10s
#            on_failure:
#              log_level: DEBUG
#          - action: restart
#          - action: pause
#            notify:
#              - target: sns.main_topic
#              - target: sns.alternate_topic
#              - target: http.slack_hook

notification_channels:
  sns:
    main_topic:
      topic_arn:
      format: json

    alternate_topic:
      topic_arn:
      format: email
      template: /path/to/template.j2

    remote_team_topic:
      topic_arn: cds-account
      role_arn: cds-role


  http:
    slack_hook:
      hostname:
      port:
      authentication:
        username:
        password:

prometheus:
  port: 8000

aws_emf:
  log_group_name: kafka/connect/watcher/metrics
  service_name: kafka-connect-watcher
  service_type: python
